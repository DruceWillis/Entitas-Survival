//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public CombatEntityComponent combatEntity { get { return (CombatEntityComponent)GetComponent(GameComponentsLookup.CombatEntity); } }
    public bool hasCombatEntity { get { return HasComponent(GameComponentsLookup.CombatEntity); } }

    public void AddCombatEntity(int newMaxHealth, float newSpeed) {
        var index = GameComponentsLookup.CombatEntity;
        var component = (CombatEntityComponent)CreateComponent(index, typeof(CombatEntityComponent));
        component.maxHealth = newMaxHealth;
        component.speed = newSpeed;
        AddComponent(index, component);
    }

    public void ReplaceCombatEntity(int newMaxHealth, float newSpeed) {
        var index = GameComponentsLookup.CombatEntity;
        var component = (CombatEntityComponent)CreateComponent(index, typeof(CombatEntityComponent));
        component.maxHealth = newMaxHealth;
        component.speed = newSpeed;
        ReplaceComponent(index, component);
    }

    public void RemoveCombatEntity() {
        RemoveComponent(GameComponentsLookup.CombatEntity);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCombatEntity;

    public static Entitas.IMatcher<GameEntity> CombatEntity {
        get {
            if (_matcherCombatEntity == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CombatEntity);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCombatEntity = matcher;
            }

            return _matcherCombatEntity;
        }
    }
}
