//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ExperienceGemComponent experienceGem { get { return (ExperienceGemComponent)GetComponent(GameComponentsLookup.ExperienceGem); } }
    public bool hasExperienceGem { get { return HasComponent(GameComponentsLookup.ExperienceGem); } }

    public void AddExperienceGem(int newGrantedEXP) {
        var index = GameComponentsLookup.ExperienceGem;
        var component = (ExperienceGemComponent)CreateComponent(index, typeof(ExperienceGemComponent));
        component.grantedEXP = newGrantedEXP;
        AddComponent(index, component);
    }

    public void ReplaceExperienceGem(int newGrantedEXP) {
        var index = GameComponentsLookup.ExperienceGem;
        var component = (ExperienceGemComponent)CreateComponent(index, typeof(ExperienceGemComponent));
        component.grantedEXP = newGrantedEXP;
        ReplaceComponent(index, component);
    }

    public void RemoveExperienceGem() {
        RemoveComponent(GameComponentsLookup.ExperienceGem);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherExperienceGem;

    public static Entitas.IMatcher<GameEntity> ExperienceGem {
        get {
            if (_matcherExperienceGem == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ExperienceGem);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherExperienceGem = matcher;
            }

            return _matcherExperienceGem;
        }
    }
}
