//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity levelProgressionEntity { get { return GetGroup(GameMatcher.LevelProgression).GetSingleEntity(); } }
    public LevelProgressionComponent levelProgression { get { return levelProgressionEntity.levelProgression; } }
    public bool hasLevelProgression { get { return levelProgressionEntity != null; } }

    public GameEntity SetLevelProgression(int newLevel, int newCurrentEXP, int newNextLevelRequiredEXP) {
        if (hasLevelProgression) {
            throw new Entitas.EntitasException("Could not set LevelProgression!\n" + this + " already has an entity with LevelProgressionComponent!",
                "You should check if the context already has a levelProgressionEntity before setting it or use context.ReplaceLevelProgression().");
        }
        var entity = CreateEntity();
        entity.AddLevelProgression(newLevel, newCurrentEXP, newNextLevelRequiredEXP);
        return entity;
    }

    public void ReplaceLevelProgression(int newLevel, int newCurrentEXP, int newNextLevelRequiredEXP) {
        var entity = levelProgressionEntity;
        if (entity == null) {
            entity = SetLevelProgression(newLevel, newCurrentEXP, newNextLevelRequiredEXP);
        } else {
            entity.ReplaceLevelProgression(newLevel, newCurrentEXP, newNextLevelRequiredEXP);
        }
    }

    public void RemoveLevelProgression() {
        levelProgressionEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public LevelProgressionComponent levelProgression { get { return (LevelProgressionComponent)GetComponent(GameComponentsLookup.LevelProgression); } }
    public bool hasLevelProgression { get { return HasComponent(GameComponentsLookup.LevelProgression); } }

    public void AddLevelProgression(int newLevel, int newCurrentEXP, int newNextLevelRequiredEXP) {
        var index = GameComponentsLookup.LevelProgression;
        var component = (LevelProgressionComponent)CreateComponent(index, typeof(LevelProgressionComponent));
        component.level = newLevel;
        component.currentEXP = newCurrentEXP;
        component.nextLevelRequiredEXP = newNextLevelRequiredEXP;
        AddComponent(index, component);
    }

    public void ReplaceLevelProgression(int newLevel, int newCurrentEXP, int newNextLevelRequiredEXP) {
        var index = GameComponentsLookup.LevelProgression;
        var component = (LevelProgressionComponent)CreateComponent(index, typeof(LevelProgressionComponent));
        component.level = newLevel;
        component.currentEXP = newCurrentEXP;
        component.nextLevelRequiredEXP = newNextLevelRequiredEXP;
        ReplaceComponent(index, component);
    }

    public void RemoveLevelProgression() {
        RemoveComponent(GameComponentsLookup.LevelProgression);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherLevelProgression;

    public static Entitas.IMatcher<GameEntity> LevelProgression {
        get {
            if (_matcherLevelProgression == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.LevelProgression);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherLevelProgression = matcher;
            }

            return _matcherLevelProgression;
        }
    }
}
